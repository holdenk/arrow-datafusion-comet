== Physical Plan ==
TakeOrderedAndProject (46)
+- * Project (45)
   +- * BroadcastHashJoin Inner BuildRight (44)
      :- * Project (30)
      :  +- * BroadcastHashJoin Inner BuildRight (29)
      :     :- * HashAggregate (15)
      :     :  +- Exchange (14)
      :     :     +- * HashAggregate (13)
      :     :        +- * Project (12)
      :     :           +- * BroadcastHashJoin Inner BuildRight (11)
      :     :              :- * Project (9)
      :     :              :  +- * BroadcastHashJoin Inner BuildRight (8)
      :     :              :     :- * ColumnarToRow (3)
      :     :              :     :  +- CometFilter (2)
      :     :              :     :     +- CometScan parquet spark_catalog.default.store_returns (1)
      :     :              :     +- BroadcastExchange (7)
      :     :              :        +- * ColumnarToRow (6)
      :     :              :           +- CometFilter (5)
      :     :              :              +- CometScan parquet spark_catalog.default.item (4)
      :     :              +- ReusedExchange (10)
      :     +- BroadcastExchange (28)
      :        +- * HashAggregate (27)
      :           +- Exchange (26)
      :              +- * HashAggregate (25)
      :                 +- * Project (24)
      :                    +- * BroadcastHashJoin Inner BuildRight (23)
      :                       :- * Project (21)
      :                       :  +- * BroadcastHashJoin Inner BuildRight (20)
      :                       :     :- * ColumnarToRow (18)
      :                       :     :  +- CometFilter (17)
      :                       :     :     +- CometScan parquet spark_catalog.default.catalog_returns (16)
      :                       :     +- ReusedExchange (19)
      :                       +- ReusedExchange (22)
      +- BroadcastExchange (43)
         +- * HashAggregate (42)
            +- Exchange (41)
               +- * HashAggregate (40)
                  +- * Project (39)
                     +- * BroadcastHashJoin Inner BuildRight (38)
                        :- * Project (36)
                        :  +- * BroadcastHashJoin Inner BuildRight (35)
                        :     :- * ColumnarToRow (33)
                        :     :  +- CometFilter (32)
                        :     :     +- CometScan parquet spark_catalog.default.web_returns (31)
                        :     +- ReusedExchange (34)
                        +- ReusedExchange (37)


(unknown) Scan parquet spark_catalog.default.store_returns
Output [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(sr_returned_date_sk#3), dynamicpruningexpression(sr_returned_date_sk#3 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(sr_item_sk)]
ReadSchema: struct<sr_item_sk:int,sr_return_quantity:int>

(2) CometFilter
Input [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]
Condition : isnotnull(sr_item_sk#1)

(3) ColumnarToRow [codegen id : 5]
Input [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]

(unknown) Scan parquet spark_catalog.default.item
Output [2]: [i_item_sk#5, i_item_id#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_item_id)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(5) CometFilter
Input [2]: [i_item_sk#5, i_item_id#6]
Condition : (isnotnull(i_item_sk#5) AND isnotnull(i_item_id#6))

(6) ColumnarToRow [codegen id : 1]
Input [2]: [i_item_sk#5, i_item_id#6]

(7) BroadcastExchange
Input [2]: [i_item_sk#5, i_item_id#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1]

(8) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [sr_item_sk#1]
Right keys [1]: [i_item_sk#5]
Join type: Inner
Join condition: None

(9) Project [codegen id : 5]
Output [3]: [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#6]
Input [5]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3, i_item_sk#5, i_item_id#6]

(10) ReusedExchange [Reuses operator id: 62]
Output [1]: [d_date_sk#7]

(11) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [sr_returned_date_sk#3]
Right keys [1]: [d_date_sk#7]
Join type: Inner
Join condition: None

(12) Project [codegen id : 5]
Output [2]: [sr_return_quantity#2, i_item_id#6]
Input [4]: [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#6, d_date_sk#7]

(13) HashAggregate [codegen id : 5]
Input [2]: [sr_return_quantity#2, i_item_id#6]
Keys [1]: [i_item_id#6]
Functions [1]: [partial_sum(sr_return_quantity#2)]
Aggregate Attributes [1]: [sum#8]
Results [2]: [i_item_id#6, sum#9]

(14) Exchange
Input [2]: [i_item_id#6, sum#9]
Arguments: hashpartitioning(i_item_id#6, 5), ENSURE_REQUIREMENTS, [plan_id=2]

(15) HashAggregate [codegen id : 18]
Input [2]: [i_item_id#6, sum#9]
Keys [1]: [i_item_id#6]
Functions [1]: [sum(sr_return_quantity#2)]
Aggregate Attributes [1]: [sum(sr_return_quantity#2)#10]
Results [2]: [i_item_id#6 AS item_id#11, sum(sr_return_quantity#2)#10 AS sr_item_qty#12]

(unknown) Scan parquet spark_catalog.default.catalog_returns
Output [3]: [cr_item_sk#13, cr_return_quantity#14, cr_returned_date_sk#15]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cr_returned_date_sk#15), dynamicpruningexpression(cr_returned_date_sk#15 IN dynamicpruning#16)]
PushedFilters: [IsNotNull(cr_item_sk)]
ReadSchema: struct<cr_item_sk:int,cr_return_quantity:int>

(17) CometFilter
Input [3]: [cr_item_sk#13, cr_return_quantity#14, cr_returned_date_sk#15]
Condition : isnotnull(cr_item_sk#13)

(18) ColumnarToRow [codegen id : 10]
Input [3]: [cr_item_sk#13, cr_return_quantity#14, cr_returned_date_sk#15]

(19) ReusedExchange [Reuses operator id: 7]
Output [2]: [i_item_sk#17, i_item_id#18]

(20) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cr_item_sk#13]
Right keys [1]: [i_item_sk#17]
Join type: Inner
Join condition: None

(21) Project [codegen id : 10]
Output [3]: [cr_return_quantity#14, cr_returned_date_sk#15, i_item_id#18]
Input [5]: [cr_item_sk#13, cr_return_quantity#14, cr_returned_date_sk#15, i_item_sk#17, i_item_id#18]

(22) ReusedExchange [Reuses operator id: 62]
Output [1]: [d_date_sk#19]

(23) BroadcastHashJoin [codegen id : 10]
Left keys [1]: [cr_returned_date_sk#15]
Right keys [1]: [d_date_sk#19]
Join type: Inner
Join condition: None

(24) Project [codegen id : 10]
Output [2]: [cr_return_quantity#14, i_item_id#18]
Input [4]: [cr_return_quantity#14, cr_returned_date_sk#15, i_item_id#18, d_date_sk#19]

(25) HashAggregate [codegen id : 10]
Input [2]: [cr_return_quantity#14, i_item_id#18]
Keys [1]: [i_item_id#18]
Functions [1]: [partial_sum(cr_return_quantity#14)]
Aggregate Attributes [1]: [sum#20]
Results [2]: [i_item_id#18, sum#21]

(26) Exchange
Input [2]: [i_item_id#18, sum#21]
Arguments: hashpartitioning(i_item_id#18, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(27) HashAggregate [codegen id : 11]
Input [2]: [i_item_id#18, sum#21]
Keys [1]: [i_item_id#18]
Functions [1]: [sum(cr_return_quantity#14)]
Aggregate Attributes [1]: [sum(cr_return_quantity#14)#22]
Results [2]: [i_item_id#18 AS item_id#23, sum(cr_return_quantity#14)#22 AS cr_item_qty#24]

(28) BroadcastExchange
Input [2]: [item_id#23, cr_item_qty#24]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4]

(29) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [item_id#11]
Right keys [1]: [item_id#23]
Join type: Inner
Join condition: None

(30) Project [codegen id : 18]
Output [3]: [item_id#11, sr_item_qty#12, cr_item_qty#24]
Input [4]: [item_id#11, sr_item_qty#12, item_id#23, cr_item_qty#24]

(unknown) Scan parquet spark_catalog.default.web_returns
Output [3]: [wr_item_sk#25, wr_return_quantity#26, wr_returned_date_sk#27]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpruning#28)]
PushedFilters: [IsNotNull(wr_item_sk)]
ReadSchema: struct<wr_item_sk:int,wr_return_quantity:int>

(32) CometFilter
Input [3]: [wr_item_sk#25, wr_return_quantity#26, wr_returned_date_sk#27]
Condition : isnotnull(wr_item_sk#25)

(33) ColumnarToRow [codegen id : 16]
Input [3]: [wr_item_sk#25, wr_return_quantity#26, wr_returned_date_sk#27]

(34) ReusedExchange [Reuses operator id: 7]
Output [2]: [i_item_sk#29, i_item_id#30]

(35) BroadcastHashJoin [codegen id : 16]
Left keys [1]: [wr_item_sk#25]
Right keys [1]: [i_item_sk#29]
Join type: Inner
Join condition: None

(36) Project [codegen id : 16]
Output [3]: [wr_return_quantity#26, wr_returned_date_sk#27, i_item_id#30]
Input [5]: [wr_item_sk#25, wr_return_quantity#26, wr_returned_date_sk#27, i_item_sk#29, i_item_id#30]

(37) ReusedExchange [Reuses operator id: 62]
Output [1]: [d_date_sk#31]

(38) BroadcastHashJoin [codegen id : 16]
Left keys [1]: [wr_returned_date_sk#27]
Right keys [1]: [d_date_sk#31]
Join type: Inner
Join condition: None

(39) Project [codegen id : 16]
Output [2]: [wr_return_quantity#26, i_item_id#30]
Input [4]: [wr_return_quantity#26, wr_returned_date_sk#27, i_item_id#30, d_date_sk#31]

(40) HashAggregate [codegen id : 16]
Input [2]: [wr_return_quantity#26, i_item_id#30]
Keys [1]: [i_item_id#30]
Functions [1]: [partial_sum(wr_return_quantity#26)]
Aggregate Attributes [1]: [sum#32]
Results [2]: [i_item_id#30, sum#33]

(41) Exchange
Input [2]: [i_item_id#30, sum#33]
Arguments: hashpartitioning(i_item_id#30, 5), ENSURE_REQUIREMENTS, [plan_id=5]

(42) HashAggregate [codegen id : 17]
Input [2]: [i_item_id#30, sum#33]
Keys [1]: [i_item_id#30]
Functions [1]: [sum(wr_return_quantity#26)]
Aggregate Attributes [1]: [sum(wr_return_quantity#26)#34]
Results [2]: [i_item_id#30 AS item_id#35, sum(wr_return_quantity#26)#34 AS wr_item_qty#36]

(43) BroadcastExchange
Input [2]: [item_id#35, wr_item_qty#36]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=6]

(44) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [item_id#11]
Right keys [1]: [item_id#35]
Join type: Inner
Join condition: None

(45) Project [codegen id : 18]
Output [8]: [item_id#11, sr_item_qty#12, (((cast(sr_item_qty#12 as double) / cast(((sr_item_qty#12 + cr_item_qty#24) + wr_item_qty#36) as double)) / 3.0) * 100.0) AS sr_dev#37, cr_item_qty#24, (((cast(cr_item_qty#24 as double) / cast(((sr_item_qty#12 + cr_item_qty#24) + wr_item_qty#36) as double)) / 3.0) * 100.0) AS cr_dev#38, wr_item_qty#36, (((cast(wr_item_qty#36 as double) / cast(((sr_item_qty#12 + cr_item_qty#24) + wr_item_qty#36) as double)) / 3.0) * 100.0) AS wr_dev#39, (cast(((sr_item_qty#12 + cr_item_qty#24) + wr_item_qty#36) as decimal(20,0)) / 3.0) AS average#40]
Input [5]: [item_id#11, sr_item_qty#12, cr_item_qty#24, item_id#35, wr_item_qty#36]

(46) TakeOrderedAndProject
Input [8]: [item_id#11, sr_item_qty#12, sr_dev#37, cr_item_qty#24, cr_dev#38, wr_item_qty#36, wr_dev#39, average#40]
Arguments: 100, [item_id#11 ASC NULLS FIRST, sr_item_qty#12 ASC NULLS FIRST], [item_id#11, sr_item_qty#12, sr_dev#37, cr_item_qty#24, cr_dev#38, wr_item_qty#36, wr_dev#39, average#40]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = sr_returned_date_sk#3 IN dynamicpruning#4
BroadcastExchange (62)
+- * Project (61)
   +- * BroadcastHashJoin LeftSemi BuildRight (60)
      :- * ColumnarToRow (49)
      :  +- CometFilter (48)
      :     +- CometScan parquet spark_catalog.default.date_dim (47)
      +- BroadcastExchange (59)
         +- * Project (58)
            +- * BroadcastHashJoin LeftSemi BuildRight (57)
               :- * ColumnarToRow (51)
               :  +- CometScan parquet spark_catalog.default.date_dim (50)
               +- BroadcastExchange (56)
                  +- * ColumnarToRow (55)
                     +- CometProject (54)
                        +- CometFilter (53)
                           +- CometScan parquet spark_catalog.default.date_dim (52)


(unknown) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#7, d_date#41]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(48) CometFilter
Input [2]: [d_date_sk#7, d_date#41]
Condition : isnotnull(d_date_sk#7)

(49) ColumnarToRow [codegen id : 3]
Input [2]: [d_date_sk#7, d_date#41]

(unknown) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date#42, d_week_seq#43]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(51) ColumnarToRow [codegen id : 2]
Input [2]: [d_date#42, d_week_seq#43]

(unknown) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date#44, d_week_seq#45]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(53) CometFilter
Input [2]: [d_date#44, d_week_seq#45]
Condition : cast(d_date#44 as string) IN (2000-06-30,2000-09-27,2000-11-17)

(54) CometProject
Input [2]: [d_date#44, d_week_seq#45]
Arguments: [d_week_seq#45], [d_week_seq#45]

(55) ColumnarToRow [codegen id : 1]
Input [1]: [d_week_seq#45]

(56) BroadcastExchange
Input [1]: [d_week_seq#45]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]

(57) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [d_week_seq#43]
Right keys [1]: [d_week_seq#45]
Join type: LeftSemi
Join condition: None

(58) Project [codegen id : 2]
Output [1]: [d_date#42]
Input [2]: [d_date#42, d_week_seq#43]

(59) BroadcastExchange
Input [1]: [d_date#42]
Arguments: HashedRelationBroadcastMode(List(input[0, date, true]),false), [plan_id=8]

(60) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [d_date#41]
Right keys [1]: [d_date#42]
Join type: LeftSemi
Join condition: None

(61) Project [codegen id : 3]
Output [1]: [d_date_sk#7]
Input [2]: [d_date_sk#7, d_date#41]

(62) BroadcastExchange
Input [1]: [d_date_sk#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=9]

Subquery:2 Hosting operator id = 16 Hosting Expression = cr_returned_date_sk#15 IN dynamicpruning#4

Subquery:3 Hosting operator id = 31 Hosting Expression = wr_returned_date_sk#27 IN dynamicpruning#4


